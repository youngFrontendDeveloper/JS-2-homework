"use strict";const API="https://raw.githubusercontent.com/GeekBrainsTutorial/online-store-api/master/responses";class GoodsList{constructor(t=".products"){this.container=t,this.goods=[],this.allProducts=[],this._makeGETRequest().then(t=>{this.goods=[...t],this.render()})}_makeGETRequest(){return fetch(`${API}/catalogData.json`).then(t=>t.json()).catch(t=>{console.log(t)})}render(){const t=document.querySelector(this.container);for(var e of this.goods){const s=new GoodsItem(e);this.allProducts.push(s),t.insertAdjacentHTML("beforeend",s.render())}}}class GoodsItem{constructor(t,e="img/noimage.jpg",s="Product Name",o="Is unknown"){this.id=t.id_product,this.img=t.img||e,this.title=t.product_name||s,this.price=t.price||o}render(){return`<div class='products__item' data-id="${this.id}">
            <img src=${this.img} class='products__item-img' alt='Изображение товара'>
            <h3 class='products__item-title'>${this.title}</h3>
            <p class='products__item-text'>${this.price} rub.</p>
            <button class='products__item-btn'>Add</button>
          </div>`}}let list=new GoodsList;class CartList{constructor(t=".cart-popup__content"){this.container=t,this.goods=[],this.allProducts=[],this._makeGETRequest().then(t=>{this.goods=[...t.contents],this.amount=t.amount,this.countGoods=t.countGoods,this.render()})}_makeGETRequest(){return fetch(`${API}/getBasket.json`).then(t=>t.json()).catch(t=>{console.log(t)})}render(){const t=document.querySelector(this.container),e=document.querySelector("#countGoods"),s=document.querySelector("#amount");for(var o of this.goods){const i=new CartItem(o);this.allProducts.push(i),t.insertAdjacentHTML("beforeend",i.render())}e.insertAdjacentHTML("beforeend",this.countGoods),s.insertAdjacentHTML("beforeend",`${this.amount} руб.`)}recalculateAmountOfProducts(){}placeOrder(){}delite(){}}class CartItem{constructor(t,e="img/noimage.jpg",s="Product Name",o="Is unknown",i=1){this.id=t.id_product,this.img=t.img||e,this.title=t.product_name||s,this.price=t.price||o,this.quantity=t.quantity||i}render(){return` <ul class="cart-popup__list">
              <li class="cart-popup__list-item" data-id="${this.id}">
                <img src="${this.img}" alt="Изображение товара">
              </li>
              <li class="cart-popup__list-item">${this.title}</li>
              <li class="cart-popup__list-item">${this.price} руб.</li>
              <li class="cart-popup__list-item">${this.quantity}</li>
              <li class="cart-popup__list-item">${this.price*this.quantity} руб.</li>
              <li class="cart-popup__list-item cart-popup__list-item--delete" title="Удалить товар">
                <img class="cart-popup__delete" src="img/delete-from-cart.ico" alt="Удалить товар">
              </li>
            </ul>`}increaseProductQuantity(){}reduceProductQuantity(){}recalculateAmountOfProduct(){}}let cartList=new CartList;const cart=document.querySelector(".cart-button"),cartPopup=document.querySelector(".cart-popup");cart.addEventListener("click",()=>{cartPopup.classList.add("open")});const cartPopupClose=document.querySelector(".cart-popup__close");cartPopupClose.addEventListener("click",()=>{cartPopup.classList.remove("open")});
//# sourceMappingURL=main.min.js.map
